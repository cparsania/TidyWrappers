library(TidyMappers)
TidyMappers::hello()
library(tidyvere)
install.packages(tidyvere)
require(tidyverse)
install.packages("tidyverse")
library(TidyMappers)
?TidyMappers::count_all_zero_cols()
??TidyMappers::count_all_zero_cols
library(TidyMappers)
?TidyMappers::count_all_zero_cols
??TidyMappers::count_all_zero_cols
library(TidyMappers)
?remove_all_zero_cols
??remove_all_zero_cols
library(TidyMappers)
??remove_all_zero_cols
?remove_all_zero_cols
library(TidyMappers)
count_all_zero_cols <- function( tbl) {
as_mapper(~ tbl %>% select_if( ~ ( (. == 0) %>% all(.)) ) %>% ncol() )
}
library(TidyMappers)
count_all_zero_cols
library(TidyMappers)
count_all_zero_cols
library(TidyMappers)
count_all_zero_cols
library(TidyMappers)
count_all_zero_cols
rm(list = ls())
count_all_zero_cols
rm(list = ls())
library(TidyMappers)
source('~/Documents/Projects/1_My_PhD/12_r_package_tidymappers/TidyMappers/R/mappers.R')
library(TidyMappers)
rm(list = ls())
library(TidyMappers)
remove.packages("TidyMappers", lib="~/Documents/Projects/1_My_PhD/12_r_package_tidymappers/TidyMappers/packrat/lib/x86_64-apple-darwin15.6.0/3.6.1")
library(TidyMappers)
add_frac_to_numeric_vals
library(TidyMappers)
add_log2_frac_to_numeric_vals
rm(list = ls())
library(TidyMappers)
add_log2_frac_to_numeric_vals
mpg
library(tidyverse)
mpg
mpg %>% filter(displ == 2)
mpg %>% as.data.frame() %>% as.matrix()
mm < -mpg %>% as.data.frame() %>% as.matrix()
mm <- mpg %>% as.data.frame() %>% as.matrix()
mm
mm %>% as.data.frame()
mm %>% as.data.frame() %>% as_tibble()
mm
mpg
mpg %>% mutate_if(is.numeric , ~ if(. == 2) {0})
mpg %>% mutate_if(is.numeric , ~ if_else(. ==2, 0, .))
mpg %>% mutate_if(is.numeric , ~ if_else(. == 2, 0 , . %>% as.double()))
mpg %>% mutate_if(is.numeric , function(x) { if_else(x == 2 , 0 , x ) )
mpg %>% mutate_if(is.numeric , function(x) { if_else(x == 2 , 0 , x  )})
mpg %>% mutate_if(is.numeric , function(x) { if_else(x == 2 , 0 , 1 )})
mpg %>% mutate_if(is.numeric , function(x) { if_else(x == 2 , 0 , . )})
mpg %>% mutate_if(is.numeric , function(x) { if_else(x == 2 , 0 , x)})
mpg %>% mutate_if(is.numeric , function(seq_along(x) ) { if_else(x == 2 , 0 )})
mpg %>% mutate_if(is.numeric , function(x){ if_else(x == 2 , 0 )})
mpg %>% mutate_if(is.numeric , function(x){ if_else(x == 2 , 0 ,NULL)})
mpg
mpg %>% mutate_if(is.numeric , function(x){ x[x == 2] <- NULL })
mpg %>% mutate_if(is.numeric , function(x){ x[x == 2] <- 11 })
mpg %>% mutate_if(is.numeric , function(.){ .[. == 2] <- NULL })
mpg %>% mutate_if(is.numeric , function(.){ .[. == 2] <- 11 })
ff <- function(x) { x[x ==2] = 0 }
mpg %>% mutate_if(is.numeric , ff)
xx <- 1:10
xx[xx < 5] <- "XX"
xx
ff <- function(x) { x[x ==2]  }
mpg %>% mutate_if(is.numeric , ff)
mpg
mpg %>% mutate_if(is.numeric , ~ if_else( . < 2 , 1111 , .) )
mpg %>% mutate_if(is.numeric , ~ if_else( . < 2 , 1111 , [[.]]) )
mpg %>% mutate_if(is.numeric , ~ if_else( [[.]] < 2 , 1111 , [[.]]) )
mpg %>% mutate_if(is.numeric , ~ if_else( . < 2 , 1111 , .) )
mpg %>% mutate_if(is.numeric , ~ if_else( . < 2 , 1111 , 222222) )
mpg %>% mutate_if(is.numeric , ~ if_else( . < 2 , 1111 , !!.) )
mpg %>% mutate_if(is.numeric , map_dbl( . , if_else(. < 2, 0000 , 0)))
mpg %>% mutate_if(is.numeric , map_dbl( . , ~if_else(. < 2, 0000 , 0)))
mpg %>% mutate_if(is.numeric , ~ function(.) { .[. < 2] <- 0}  )
mpg %>% mutate_if(is.numeric ,  function(.) { .[. < 2] <- 0}  )
mpg %>% mutate_if(is.numeric ,  function(.) { .[. < 2] = 0 }  )
mpg %>% mutate_if( is.numeric , list(~ ifelse( . == 99, NA, .)))
mpg %>% mutate_if( is.numeric , list(~ ifelse( . < 2, 11111, .)))
mpg %>% mutate_if( is.numeric , list(~ ifelse( . == 2, 11111, .)))
mpg %>% mutate_if( is.numeric , ~ ifelse( . == 2, 11111, .))
mpg %>% mutate_if( is.numeric , ~ if_else( . == 2, 11111, .))
mpg %>% mutate_if( is.numeric , ~ if_else( . == 2, 11111, . %>% as.double()))
mpg %>% mutate_if( is.numeric , ~ if_else( . == 2, 11111, . %>% as.double))
mpg %>% mutate_if( is.numeric , ~ if_else( . == 2, 11111, . %>% as.double(.)))
mpg %>% mutate_if( is.numeric , ~ if_else( . == 2, 11111, as.double(.)))
mpg %>% mutate_if( is.numeric , function(x)if_else( x == 2, 11111, as.double(.)))
mpg %>% mutate_if( is.numeric , function(x)if_else( x == 2, 11111, as.double(x)))
filter_less_than <- as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < .y , as.double(.) , . )))
mpg %>% filter_less_than()
mpg %>% filter_less_than(0.1)
mpg %>% filter_less_than(1)
mpg %>% filter_less_than(.y = 1)
filter_less_than <- as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < ..2 , ..3 , as.double(.) )))
mpg %>% filter_less_than(..2= 1 , ..3 =  10000)
filter_less_than(mpg , ..2= 1 , ..3 =  10000)
filter_less_than()
filter_less_than
mpg %>% mutate_if(is.numeric , ~ if_else(. < 2 , 1111 , as.double(.) ) )
filter_less_than <- as_mapper(~
.x %>% mutate_if(is.numeric , ~ if_else(. < .y , 1111 , as.double(.) ) )
)
filter_less_than(mpg , 2)
filter_less_than <- as_mapper(~
(.x %>% mutate_if(is.numeric , ~ if_else(. < .y , 1111 , as.double(.) )) )
)
filter_less_than(mpg , 2)
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < .y , 1111 , as.double(.) ) ))
filter_less_than(mpg , 2)
filter_less_than( .x = mpg , .y = 2)
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < !!.y , 1111 , as.double(.) ) ))
filter_less_than( .x = mpg , .y = 2)
filter_less_than <- purrr::as_mapper(~ !!.x %>% mutate_if(is.numeric , ~ if_else(. < !!.y , 1111 , as.double(.) ) ))
filter_less_than( .x = mpg , .y = 2)
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < !!..1 , !!..2 , as.double(.) ) ))
filter_less_than( .x = mpg , .y = 2)
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < !!..1 , !!..2 , as.double(.) ) ))
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < `!!..1` , `!!..2` , as.double(.) ) ))
filter_less_than( ..1 = mpg , ..2 =  2)
filter_less_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..1 , !!..2 , as.double(.) ) ))
filter_less_than_or_equal <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. <= !!..1 , !!..2 , as.double(.) ) ))
filter_less_than( ..1 = mpg , ..2 =  2)
filter_less_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..1 , !!..2 , as.double(.) ) ))
filter_less_than( ..1 = mpg , ..2 =  fsdfsdfsa)
filter_less_than( ..1 = mpg , ..2 =  34444444)
filter_less_than <- purrr::as_mapper(~ !!..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..1 , !!..2 , as.double(.) ) ))
filter_less_than( ..1 = mpg , ..2 =  34444444)
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < !!.y , !!.z , as.double(.) ) ))
filter_less_than( mpg , 2, 2222)
filter_less_than <- purrr::as_mapper(~ .x %>% mutate_if(is.numeric , ~ if_else(. < !!..2 , !!..3 , as.double(.) ) ))
filter_less_than( mpg , 2, 2222)
filter_less_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..2 , !!..3 , as.double(.) ) ))
filter_less_than( mpg , 2, 2222)
filter_less_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..2 , !!..3 , as.double(.) ) ))
filter_less_than( mpg , 2, 2222)
filter_less_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..2 , !!..3 , as.double(.) ) ))
filter_less_than( mpg , 2, 2222)
replace_less_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. < !!..2 , !!..3 , as.double(.) ) ))
replace_less_than_or_equal <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. <= !!..2 , !!..3 , as.double(.) ) ))
replace_greater_than <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. > !!..2 , !!..3 , as.double(.) ) ))
replace_greater_than_or_equal <- purrr::as_mapper(~ ..1 %>% mutate_if(is.numeric , ~ if_else(. >= !!..2 , !!..3 , as.double(.) ) ))
mpg %>% replace_less_than(2, 200)
mpg %>% replace_less_than_or_equal(2, 200)
mpg %>% replace_greater_than(2, 200)
mpg %>% replace_greater_than_or_equal(2, 200)
matrix(rnorm(1000) , 10, 100)
matrix(rnorm(1000) , 10, 100) %>% as.data.frame()
matrix(rnorm(1000) , 10, 100) %>% as.data.frame() %>% as_tibble()
matrix(rnorm(1000) , 10, 100) %>% as.data.frame() %>% as_tibble() %>% mutate(geneNames = letters[1:10])
matrix(rnorm(1000) , 10, 100) %>% as.data.frame() %>% as_tibble() %>% mutate(geneNames = letters[1:10]) %>% select(geneNames, everything())
dt <- matrix(rnorm(1000) , 10, 100) %>%
as.data.frame() %>%
as_tibble() %>%
mutate(geneNames = letters[1:10]) %>%
select(geneNames, dplyr::everything())
dt <- matrix(rnorm(1000) , 10, 100) %>%
as.data.frame() %>%
as_tibble() %>%
mutate(geneNames = letters[1:10]) %>%
select(geneNames, dplyr::everything()) %>% select(1:10)
dt
dt %>% gather(key = "vars" , value = "expr" , -geneNames)
dt %>% gather(key = "vars" , value = "expr" , -geneNames) %>% group_by(geneNames) %>% mutate(row_sum = sum(expr))
long_data <- dt %>% gather(key = "vars" , value = "expr" , -geneNames)
long_data
long_data %>% group_by(geneNames) %>% tally()
long_data %>% group_by(geneNames) %>% n()
long_data %>% group_by(geneNames) %>% mutate(n())
long_data %>% group_by(geneNames) %>% tally()
long_data %>% group_by(geneNames) %>% add_count()
long_data %>% group_by(geneNames) %>% add_count(name = "dfasfdsf")
long_data
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr)) %>% spread(key = vars , sum)
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr)) %>% select(-expr) %>% spread(key = vars , sum)
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup()
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup() %>% select(1,3)
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup() %>% select(1,3) %>% unique()
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup() %>% select(1,3) %>% arrange(desc(expr))
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% filter(geneNames == "a")
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup() %>% select(1,4) %>% arrange(desc(sum))
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup() %>% select(1,4) %>% arrange(desc(sum)) %>% unique()
dt
dt %>% mutate_if(is.numeric ,  ~ sum(.))
dt
long_data
dt
dt %>% select_if(is.numeric)
dt
long_data
dt
long_data %>% group_by(geneNames) %>% mutate(sum = sum(expr))  %>% ungroup() %>% select(1,4) %>% arrange(desc(sum)) %>% unique()
long_data %>% group_by(geneNames) %>%
mutate(sum = sum(expr))  %>%
ungroup() %>%
select(1,4) %>%
arrange(desc(sum)) %>%
unique()
long_data %>% group_by(geneNames) %>%
mutate(sum = sum(expr))  %>%
ungroup() %>%
select(1,4) %>%
arrange(desc(sum)) %>%
unique() %>% left_join(dt)
dt
dt %>% group_by(geneNames) %>% mutate(sum = (.))
dt %>% group_by(geneNames) %>% mutate(sum = sum(.))
dt %>% group_by(geneNames)
dt %>% group_by(geneNames) %>% mutate(sum = ~ sum(.))
dt %>% group_by(geneNames) %>% mutate(sum = sum(v1))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1:V9))
long_data %>% group_by(geneNames) %>%
mutate(sum = sum(expr))  %>%
ungroup() %>%
select(1,4) %>%
arrange(desc(sum)) %>%
unique() %>% left_join(dt)
long_data %>% group_by(geneNames) %>%
mutate(sum = sum(expr))  %>%
ungroup() %>%
select(1,4) %>%
unique() %>% left_join(dt)
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1:V9))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1:V2))
sum(1.15,-0.0254)
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1:V2))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2))
dt %>% group_by(geneNames) %>% mutate(sum = sum(.))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt <- matrix(rnorm(1000) , 10, 100) %>%
as.data.frame() %>%
as_tibble() %>%
mutate(geneNames = letters[1:10]) %>%
select(geneNames, dplyr::everything()) %>% select(1:10)
dt
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt %>% group_by(geneNames) %>% mutate(summarise(V1:V9))
dt %>% group_by(geneNames) %>% mutate(summarise(V1:V9 , sum))
dt %>% group_by(geneNames) %>% summarise_if(is.numeric , sum)
dt %>% group_by(geneNames) %>% summarise_if(is.numeric , sum(V1:V9))
dt %>% group_by(geneNames) %>% mutate(sum = summarise(sum(V1:V9)))
dt %>% group_by(geneNames)%>% select_if(is.numeric) %>% mutate(sum = summarise(sum(V1:V9)))
dt %>% group_by(geneNames)%>% select_if(is.numeric)
dt %>% group_by(geneNames)%>% select_if(is.numeric) %>% mutate(sum = dplyr::summarise(sum(V1:V9)))
dt %>% group_by(geneNames)%>% mutate(sum = sum(V1::V9))
dt %>% group_by(geneNames)%>% mutate(sum = sum(V1:V9))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt %>% group_by(geneNames)%>% mutate(sum = sum(V1!!:V9))
dt %>% group_by(geneNames)%>% mutate(sum = sum(!!V1:V9))
dt %>% group_by(geneNames)%>% mutate(sum = sum(!! V1:V9))
quo(V1:V9)
cols <- quo(V1:V9)
dt %>% group_by(geneNames)%>% mutate(sum = sum(!!cols))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt %>% group_by(geneNames)%>% mutate(sum = sum(vars(contains("V"))))
dt %>% group_by(geneNames)%>% summarise(sum(.))
dt %>% group_by(geneNames)%>% summarise_if(is.numeric, sum(.))
dt %>% group_by(geneNames)%>% summarise_if(is.numeric, sum)
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt
dt %>% group_by(geneNames)%>% summarise_if(is.numeric, mean)
dt %>% mutate(sumVar = rowsum(.[1:4]))
dt
dt %>% mutate(sumVar = rowSums(.[1:4] ))
dt %>% mutate(sumVar = rowSums(.[2:9] ))
dt %>% mutate(sum = rowSums(.[2:9] ))
dt
dt %>% mutate(sum = rowSums(.[2:9] ))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt
dt %>% mutate(sum = rowSums(.[2:10] ))
dt %>% group_by(geneNames) %>% mutate(sum = sum(V1,V2,V3,V4,V5,V6,V7,V8,V9))
dt %>% mutate(sum = rowSums(.[,2:10] ))
matrix(rnorm(1000) , 10, 100)[1:10]
dt %>% mutate(sum = rowSums(.[2:10] ))
dt %>% mutate(sum = rowSums(.[,2:10] ))
mpg
mpg %>% .[1:2]
mpg %>% .[1:34,1:2]
mpg %>% as.data.frame()
mpg %>% as.data.frame() %>% .[1:2]
mpg
library(dplyr)
library(tidyverse)
mpg
count_all_zero_cols <- function( tbl) {
mm <-  purrr::as_mapper(~ .x %>% dplyr::select_if( ~ ( (. == 0) %>% all(.)) ) %>% ncol() )
tbl %>% mm()
}
count_all_zero_cols(mpg)
?dplyr::select
mtcars
mpg
iris
dplyr::mpg
?mpg
ggplot::mpg
ggplot3::mpg
ggplot2::mpg
tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
tbl
#' @examples
#' \dontrun{
#'
#'  ggplot2::mpg %>% count_all_zero_cols()
#'
#'  ###########################################
#'
#'  tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
#'  tbl %>% count_all_zero_cols()
#' }
count_all_zero_cols <- function( tbl) {
mm <-  purrr::as_mapper(~ .x %>% dplyr::select_if( ~ ( (. == 0) %>% all(.)) ) %>% ncol() )
tbl %>% mm()
}
tbl %>% count_all_zero_cols()
tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 , xx = 0)
tbl %>% count_all_zero_cols()
tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 , xx = 0 , zz = 0:4)
tbl %>% count_all_zero_cols()
#' \donotrun{
#'
#'  ggplot2::mpg %>% remove_all_zero_vars()
#'
#'  ###########################################
#'
#'  tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
#'  tbl %>% remove_all_zero_vars()
#'
#' }
remove_all_zero_vars <- function(tbl){
mm <-  as_mapper(~ .x %>% select_if( ~ ( (. == 0) %>% all(.)  %>% `!`) ))
tbl %>% mm()
}
ggplot2::mpg %>% remove_all_zero_vars()
tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
tbl %>% remove_all_zero_vars()
tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4)
tbl2
tbl2 %>% remove_all_zero_vars()
#'
#'  ###########################################
#'
#'  tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
#'  tbl
#'  tbl %>% get_zero_vars()
#'
#'  tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4)
#'  tbl2 %>% get_zero_vars()
#' }
get_zero_vars <- function(tbl){
mm <-   as_mapper(~ .x %>% select_if( ~ ( (. == 0) %>% all(.)) ) %>% colnames() )
tbl %>% mm()
}
#'
#'  ###########################################
#'
#'  tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
#'  tbl
#'  tbl %>% get_zero_vars()
#'
#'  tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4)
#'  tbl2 %>% get_zero_vars()
#' }
get_zero_vars <- function(tbl){
mm <-   as_mapper(~ .x %>% select_if( ~ ( (. == 0) %>% all(.)) ) %>% colnames() )
tbl %>% mm()
}
ggplot2::mpg %>% get_zero_vars()
get_zero_vars <- function(tbl){
mm <-   as_mapper(~ .x %>% select_if( ~ ( (. == 0) %>% all(.)) ) %>% colnames() )
tbl %>% mm()
}
ggplot2::mpg %>% get_zero_vars()
tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
tbl %>% get_zero_vars()
tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4)
tbl2 %>% get_zero_vars()
tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4 , yy = 0)
tbl2 %>% get_zero_vars()
#'
#'  ###########################################
#'
#'  tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
#'  tbl
#'  tbl %>% get_zero_vars()
#'
#'  tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4 , yy = 0)
#'  tbl2 %>% get_zero_vars()
#' }
get_zero_vars <- function(tbl){
mm <-   purrr::as_mapper(~ .x %>% dplyr::select_if( ~ ( (. == 0) %>% all(.)) ) %>% colnames() )
tbl %>% mm()
}
ggplot2::mpg %>% get_zero_records()
#'
#'  ###########################################
#'
#'  tbl <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0 )
#'  tbl
#'  tbl %>% get_zero_vars()
#'
#'  tbl2 <- tibble(x = letters[1:5] , y = LETTERS[1:5] , z = 0  , xx = 0:4 , yy = 0)
#'  tbl2 %>% get_zero_vars()
#' }
get_zero_records <- function(tbl){
mm <- purrr::as_mapper(~ .x %>% dplyr::filter_if(is.numeric , dplyr::all_vars( . == 0) ))
tbl %>% mm()
}
ggplot2::mpg %>% get_zero_records()
install.packages(devtools)
.libPaths()
.Library
install.packages("devtools")
usethis::use_package(type = "importfrom" ,package = "dplyr")
usethis::use_package(type = "imports" ,package = "dplyr")
usethis::use_package(type = "imports" ,package = "purrr")
